// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

/**
 * @title IVerifier
 * @dev Interface for zero-knowledge proof verification
 * 
 * This interface is implemented by auto-generated verifier contracts from ZKP circuits.
 * It provides verification for various privacy-preserving proofs about reputation scores,
 * including:
 * - Minimum score thresholds
 * - Experience levels
 * - Dispute history
 * - Completion rates
 * 
 * USAGE:
 * - The verifier receives a proof and public inputs
 * - Verifies the proof's validity without revealing private data
 * - Returns true if the proof is valid for the claimed statement
 * 
 * INTEGRATION:
 * - Used by PrivateReputationRegistry for ZKP verification
 * - Typically generated by tools like Circom or ZoKrates
 * - Each proof type might have its own verifier implementation
 * 
 * SECURITY:
 * - Critical for maintaining privacy in the reputation system
 * - Must be properly implemented to ensure proof validity
 * - Should be audited as part of the ZKP system
 */

interface IVerifier {
    function verifyProof(
        bytes calldata proof,
        uint256[] calldata publicInputs
    ) external view returns (bool);
}